@isTest
public class CreateServicingOpportunityTest {
    

    @testSetup
    static void setupTestData() {
        Account acc = new Account(Name = 'Test Account');
        insert acc;
        List<Opportunity> closedWonOpps = new List<Opportunity>();
        for (Integer i = 0; i < 5; i++) {
            Opportunity opp = new Opportunity(
                Name = 'Closed Won Opp ' + i,
                AccountId = acc.Id,
                StageName = 'Closed Won',
                CloseDate = Date.today().addMonths(-5) 
            );
            closedWonOpps.add(opp);
        }
        insert closedWonOpps;
    }
    
    // Success test
    @isTest
    static void testCreateServicingOpportunitySuccess() {
        Test.startTest();
        CreateServicingOpportunity scheduler = new CreateServicingOpportunity();
        scheduler.execute(null);
        Test.stopTest();
        
        // Verify that Closed Won Opportunities are updated to Servicing
        List<Opportunity> updatedOpps = [
            SELECT Id, StageName, RecordTypeId, CloseDate
            FROM Opportunity
            WHERE RecordTypeId = :scheduler.getServicingRecordTypeId()
        ];
        
        System.assertEquals(5, updatedOpps.size(), 'Five Closed Won Opportunities should be updated');
        
        for (Opportunity opp : updatedOpps) {
            System.assertEquals('Closed Won', opp.StageName, 'Stage should be Closed Won');
            System.assertEquals(scheduler.getServicingRecordTypeId(), opp.RecordTypeId, 'Record Type should be Servicing');
            System.assertEquals(Date.today().addDays(30), opp.CloseDate, 'Close Date should be updated');
        }
    }

    @isTest
    static void testCreateServicingOpportunityFailure() {
        Test.startTest();
        CreateServicingOpportunity scheduler = new CreateServicingOpportunity();
        scheduler.execute(null);
        Test.stopTest();
 
        List<Opportunity> updatedOpps = [
            SELECT Id
            FROM Opportunity
            WHERE RecordTypeId = :scheduler.getServicingRecordTypeId()
        ];
        
        System.assertEquals(0, updatedOpps.size(), 'No Opportunities should be updated');
    }
}
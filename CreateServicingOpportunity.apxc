//String cronExpression = '0 0 0 1 * ?'; 
//String jobName = 'CreateServicingOpportunityScheduler';
//System.schedule(jobName, cronExpression, new CreateServicingOpportunity());
public class CreateServicingOpportunity implements Schedulable {

    public Id getServicingRecordTypeId() {
        RecordType recordType = [SELECT Id FROM RecordType WHERE SObjectType = 'Opportunity' AND Name = 'Servicing' LIMIT 1];
        return recordType.Id;
    }

    public Id getNewDealRecordTypeId() {
        RecordType recordType = [SELECT Id FROM RecordType WHERE SObjectType = 'Opportunity' AND Name = 'New Deal' LIMIT 1];
        return recordType.Id;
    }

    public void execute(SchedulableContext sc) {
        Date thirtyDaysFromNow = Date.today().addDays(30);
        Date sixMonthsAgo = Date.today().addMonths(-6);

        // Get the 'Servicing' and 'New Deal' Record Type Ids
        Id servicingRecordTypeId = getServicingRecordTypeId();
        Id newDealRecordTypeId = getNewDealRecordTypeId();
        
        //update the counter to show how long ago it was closed
        List<Opportunity> oppsInNewDealtRT = [SELECT Id, DaysInNewDealRT__c
                                          FROM Opportunity
                                          WHERE RecordTypeId = :newDealRecordTypeId];

        for (Opportunity opp : oppsInNewDealRT) {
            opp.DaysInNewDealRT__c += 30;
        }

        if (!oppsInNewDealRT.isEmpty()) {
            update oppsInNewDealRT;
        }

        // Get the existing 'Servicing' opportunities
        List<Opportunity> existingServicingOpps = [SELECT Id FROM Opportunity WHERE RecordTypeId = :servicingRecordTypeId];

        // Refresh the existing 'Servicing' opportunities for it to have updated values every month
        if (!existingServicingOpps.isEmpty()) {
            for (Opportunity opp : existingServicingOpps) {
                opp.RecordTypeId = newDealRecordTypeId;
            }
            update existingServicingOpps;
        }

        // Get the 'New Deal' opportunities with close date within the next 30 days
        List<Opportunity> newDealOppsToMove = [SELECT Id, Name, AccountId, StageName, CloseDate
                                                FROM Opportunity
                                                WHERE RecordTypeId = :newDealRecordTypeId
                                                AND DaysInNewDealRT__c >= :sixMonthsAgo.daysBetween(Date.today())
                                                AND CloseDate <= :thirtyDaysFromNow];

        List<Opportunity> oppsToUpdate = new List<Opportunity>();
        for (Opportunity opp : newDealOppsToMove) {
            opp.RecordTypeId = servicingRecordTypeId;
            oppsToUpdate.add(opp);
        }

        if (!oppsToUpdate.isEmpty()) {
            update oppsToUpdate;
        }
    }
}